exclude = [
  ".idea",
  ".git",
  ".ruff_cache",
  "venv",
  ".venv",
  "__pycache__",
]

line-length = 88
indent-width = 4
target-version = "py311"

[lint]
preview = true
select = [
  "F", # Pyflakes
  "E", # pycodestyle
  "W", # pycodestyle
  "N", # pep8-naming
  "UP", # pyupgrade
  "ANN", # flake8-annotations
  "ASYNC", # flake8-async
  "TRIO", # flake8-trio
  "S", # flake8-bandit
  "BLE", # flake8-blind-except
  "B", # flake8-bugbear
  "COM", # flake8-commas
  "C4", # flake8-comprehensions
  "PLC", # Pylint
  "ISC", # flake8-implicit-str-concat
  "INP", # flake8-no-pep420
  "PIE", # flake8-pie
  "Q", # flake8-quotes
  "RSE", # flake8-raise
  "RET", # flake8-return
  "SLF", # flake8-self
  "SIM", # flake8-simplify
  "ARG", # flake8-unused-arguments
  "PTH", # flake8-use-pathlib
  "ERA", # eradicate
  "FLY", # flynt
  "PERF", # Perflint
  "FURB", # refurb
  "RUF", # Ruff-specific rules
  "T10", # flake8-debugger
  "T20", # flake8-print
]
ignore = [
  "ANN101", # missing-type-self | Missing type annotation for {name} in method
  "ANN102", # missing-type-cls | Missing type annotation for {name} in classmethod
  "ANN401", # any-type | Dynamically typed expressions (typing.Any) are disallowed in {name}
  "UP038", # Use `X | Y` in `isinstance` call instead of `(X, Y)`
  "B905", # `zip()` without an explicit `strict=` parameter
  "RUF001", # ambiguous-unicode-character-string | String contains ambiguous {}. Did you mean {}?
  "RUF002", # ambiguous-unicode-character-docstring | Docstring contains ambiguous {}. Did you mean {}?
  "RUF003", # ambiguous-unicode-character-comment | Comment contains ambiguous {}. Did you mean {}?
  "UP042", # Class StrEnum inherits from both `str` and `enum.Enum`
]
fixable = ["ALL"]
unfixable = []

[format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"